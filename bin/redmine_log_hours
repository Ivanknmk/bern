#!/usr/bin/env ruby

require 'date'
require 'newrelic_rpm'
require './lib/cloud_logger/redmine'
require './lib/notifications/mailer'

@url = ENV['THIRD_PARTY_URL']
@headers = {
  'X-Redmine-API-Key' => ENV['THIRD_PARTY_KEY']
}
@params = {
  "time_entry" => {
    "issue_id" => ENV['ISSUE_ID'],
    "spent_on" => DateTime.now.strftime('%F'),
    "hours"=> ENV['HOURS'],
    "activity_id"=> ENV['ACTIVITY_ID']
  }
}
@params2 = {
  "time_entry" => {
    "issue_id" => ENV['ISSUE_ID2'],
    "spent_on" => DateTime.now.strftime('%F'),
    "hours"=> ENV['HOURS2'],
    "activity_id"=> ENV['ACTIVITY_ID']
  }
}

@params3 = {
  "time_entry" => {
    "issue_id" => ENV['ISSUE_ID3'],
    "spent_on" => DateTime.now.strftime('%F'),
    "hours"=> ENV['HOURS3'],
    "activity_id"=> ENV['ACTIVITY_ID']
  }
}

@params4 = {
  "time_entry" => {
    "issue_id" => ENV['ISSUE_ID4'],
    "spent_on" => DateTime.now.strftime('%F'),
    "hours"=> ENV['HOURS4'],
    "activity_id"=> ENV['ACTIVITY_ID']
  }
}

if DateTime.now.strftime('%u').to_i < 6
  redmine = CloudLogger::Redmine.new(url: @url)
  response = redmine.log_hours(body: @params, custom_headers: @headers)
  response2 = redmine.log_hours(body: @params2, custom_headers: @headers)
  response3 = redmine.log_hours(body: @params3, custom_headers: @headers)
  response4 = redmine.log_hours(body: @params4, custom_headers: @headers)
  puts response.inspect
  puts response2.inspect
  puts response3.inspect
  puts response4.inspect
  mailer = Notifications::Mailer.new(smtp_server: ENV['SMTP_SERVER'], smtp_port: ENV['SMTP_PORT'], smtp_username: ENV['SENDGRID_USERNAME'], smtp_password: ENV['SENDGRID_PASSWORD'], smtp_domain: ENV['SMTP_DOMAIN'])
  if (response.status == 200 || response.status == 201) && (response2.status == 200 || response2.status == 201) && (response3.status == 200 || response3.status == 201) && (response4.status == 200 || response4.status == 201)
    mailer.send(host_email: ENV['SMTP_HOST_EMAIL'], delivery_email: ENV['SMTP_DEVELIVERY_EMAIL'])
  end
end
